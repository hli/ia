var search_data = {"index":{"info":[["NewRelic","lib/new_relic/ia/version.rb","classes/NewRelic.html"," < ","",1],["IA","NewRelic","classes/NewRelic/IA.html"," < ","",1],["CLI","NewRelic::IA","classes/NewRelic/IA/CLI.html"," < Object","",1],["DiskSampler","NewRelic::IA","classes/NewRelic/IA/DiskSampler.html"," < NewRelic::Agent::Sampler","This is some demo code which shows how you might install your own sampler.  This one theoretically monitors",1],["InitError","NewRelic::IA","classes/NewRelic/IA/InitError.html"," < StandardError","",1],["IostatReader","NewRelic::IA","classes/NewRelic/IA/IostatReader.html"," < Object","The iostat reader simply opens a pipe on the iostat command, listening every 15 seconds and taking a",1],["Linux","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader/Linux.html"," < ","",1],["OSX","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader/OSX.html"," < ","",1],["MemcachedSampler","NewRelic::IA","classes/NewRelic/IA/MemcachedSampler.html"," < NewRelic::Agent::Sampler","Memcached stats sampler An IGN Hackday project ",1],["MetricNames","NewRelic::IA","classes/NewRelic/IA/MetricNames.html"," < ","",1],["aggregate_stats","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000062","()","",2],["check","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000059","()","Sanity check, make sure the servers are there. ",2],["cmd","NewRelic::IA::IostatReader::Linux","classes/NewRelic/IA/IostatReader/Linux.html#M000046","()","",2],["cmd","NewRelic::IA::IostatReader::OSX","classes/NewRelic/IA/IostatReader/OSX.html#M000049","()","",2],["debug","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000067","(msg)","",2],["disk","NewRelic::IA::CLI","classes/NewRelic/IA/CLI.html#M000041","()","",2],["disk_stats","NewRelic::IA::DiskSampler","classes/NewRelic/IA/DiskSampler.html#M000038","(filesystem)","",2],["execute","NewRelic::IA::CLI","classes/NewRelic/IA/CLI.html#M000036","(stdout, arguments=[])","Run the command line args.  Return nil if running or an exit status if not. ",2],["init","NewRelic::IA::IostatReader::Linux","classes/NewRelic/IA/IostatReader/Linux.html#M000047","()","",2],["init","NewRelic::IA::IostatReader::OSX","classes/NewRelic/IA/IostatReader/OSX.html#M000050","()","",2],["issue_stats","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000063","(hostname_port)","TODO send stats for down nodes ",2],["level=","NewRelic::IA::CLI","classes/NewRelic/IA/CLI.html#M000035","(l)","",2],["log","NewRelic::IA::CLI","classes/NewRelic/IA/CLI.html#M000034","()","",2],["log","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader.html#M000054","()","",2],["log","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader.html#M000053","()","",2],["logger","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000061","()","",2],["memcached","NewRelic::IA::CLI","classes/NewRelic/IA/CLI.html#M000042","()","",2],["memcached_nodes","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000058","()","",2],["new","NewRelic::IA::DiskSampler","classes/NewRelic/IA/DiskSampler.html#M000037","()","",2],["new","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader.html#M000052","()","",2],["new","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000056","()","",2],["parse_and_report_stats","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000065","(hostname_port, stats_text)","",2],["parse_config","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000057","()","",2],["parse_stats","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000064","(hostname_port, stats_text)","",2],["poll","NewRelic::IA::DiskSampler","classes/NewRelic/IA/DiskSampler.html#M000039","()","This gets called every 10 seconds, or once a minute depending on how you add the sampler to the stats",2],["poll","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000060","()","This gets called once a minute in the agent worker thread.  It pings each host in the array 'memcached_nodes'",2],["read_next","NewRelic::IA::IostatReader::Linux","classes/NewRelic/IA/IostatReader/Linux.html#M000048","()","",2],["read_next","NewRelic::IA::IostatReader::OSX","classes/NewRelic/IA/IostatReader/OSX.html#M000051","()","",2],["run","NewRelic::IA::IostatReader","classes/NewRelic/IA/IostatReader.html#M000055","()","",2],["stats","NewRelic::IA::MemcachedSampler","classes/NewRelic/IA/MemcachedSampler.html#M000066","(s)","",2],["LICENSE","files/LICENSE.html","files/LICENSE.html","","(The MIT License)  Copyright (c) 2009-2010 New Relic, Inc.  Permission is hereby granted, free of charge,",3],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= New Relic Infrastructure Agent  Gem for collecting memcached, disk, cpu and IO statistics.  Collected",3],["cli.rb","files/lib/new_relic/ia/cli_rb.html","files/lib/new_relic/ia/cli_rb.html","","",3],["disk_sampler.rb","files/lib/new_relic/ia/disk_sampler_rb.html","files/lib/new_relic/ia/disk_sampler_rb.html","","",3],["iostat_reader.rb","files/lib/new_relic/ia/iostat_reader_rb.html","files/lib/new_relic/ia/iostat_reader_rb.html","","",3],["linux.rb","files/lib/new_relic/ia/iostat_reader/linux_rb.html","files/lib/new_relic/ia/iostat_reader/linux_rb.html","","",3],["osx.rb","files/lib/new_relic/ia/iostat_reader/osx_rb.html","files/lib/new_relic/ia/iostat_reader/osx_rb.html","","",3],["memcached_sampler.rb","files/lib/new_relic/ia/memcached_sampler_rb.html","files/lib/new_relic/ia/memcached_sampler_rb.html","","",3],["metric_names.rb","files/lib/new_relic/ia/metric_names_rb.html","files/lib/new_relic/ia/metric_names_rb.html","","",3],["newrelic.yml","files/lib/new_relic/ia/newrelic_yml.html","files/lib/new_relic/ia/newrelic_yml.html","","# # This is a configuration file for the RPM Agent, tailored # for use as a system monitor. # # <%= generated_for_user",3],["version.rb","files/lib/new_relic/ia/version_rb.html","files/lib/new_relic/ia/version_rb.html","","",3],["newrelic_ia.rb","files/lib/newrelic_ia_rb.html","files/lib/newrelic_ia_rb.html","","Make sure the code is on the path, and load the version file. ",3]],"searchIndex":["newrelic","ia","cli","disksampler","initerror","iostatreader","linux","osx","memcachedsampler","metricnames","aggregate_stats()","check()","cmd()","cmd()","debug()","disk()","disk_stats()","execute()","init()","init()","issue_stats()","level=()","log()","log()","log()","logger()","memcached()","memcached_nodes()","new()","new()","new()","parse_and_report_stats()","parse_config()","parse_stats()","poll()","poll()","read_next()","read_next()","run()","stats()","license","readme.rdoc","cli.rb","disk_sampler.rb","iostat_reader.rb","linux.rb","osx.rb","memcached_sampler.rb","metric_names.rb","newrelic.yml","version.rb","newrelic_ia.rb"],"longSearchIndex":["lib/new_relic/ia/version.rb","newrelic","newrelic::ia","newrelic::ia","newrelic::ia","newrelic::ia","newrelic::ia::iostatreader","newrelic::ia::iostatreader","newrelic::ia","newrelic::ia","newrelic::ia::memcachedsampler","newrelic::ia::memcachedsampler","newrelic::ia::iostatreader::linux","newrelic::ia::iostatreader::osx","newrelic::ia::memcachedsampler","newrelic::ia::cli","newrelic::ia::disksampler","newrelic::ia::cli","newrelic::ia::iostatreader::linux","newrelic::ia::iostatreader::osx","newrelic::ia::memcachedsampler","newrelic::ia::cli","newrelic::ia::cli","newrelic::ia::iostatreader","newrelic::ia::iostatreader","newrelic::ia::memcachedsampler","newrelic::ia::cli","newrelic::ia::memcachedsampler","newrelic::ia::disksampler","newrelic::ia::iostatreader","newrelic::ia::memcachedsampler","newrelic::ia::memcachedsampler","newrelic::ia::memcachedsampler","newrelic::ia::memcachedsampler","newrelic::ia::disksampler","newrelic::ia::memcachedsampler","newrelic::ia::iostatreader::linux","newrelic::ia::iostatreader::osx","newrelic::ia::iostatreader","newrelic::ia::memcachedsampler","files/license.html","files/readme_rdoc.html","files/lib/new_relic/ia/cli_rb.html","files/lib/new_relic/ia/disk_sampler_rb.html","files/lib/new_relic/ia/iostat_reader_rb.html","files/lib/new_relic/ia/iostat_reader/linux_rb.html","files/lib/new_relic/ia/iostat_reader/osx_rb.html","files/lib/new_relic/ia/memcached_sampler_rb.html","files/lib/new_relic/ia/metric_names_rb.html","files/lib/new_relic/ia/newrelic_yml.html","files/lib/new_relic/ia/version_rb.html","files/lib/newrelic_ia_rb.html"]}}